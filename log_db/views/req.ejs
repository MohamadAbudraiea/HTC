<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Student Applications</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Inter', sans-serif;
      background: #f4f9ff;
      margin: 0;
      padding: 0;
    }

    h1 {
      text-align: center;
      margin-top: 30px;
      color: #007acc;
    }

    .applications {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 20px;
      padding: 40px;
      max-width: 1200px;
      margin: auto;
    }

    .application {
      background: #fff;
      border: 1px solid #d9eaff;
      border-radius: 10px;
      padding: 20px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
      transition: transform 0.2s ease;
    }

    .application:hover {
      transform: translateY(-3px);
    }

    .application h3 {
      margin-top: 0;
      color: #333;
    }

    .application p {
      margin: 5px 0;
    }

    .status-badge {
      display: inline-block;
      padding: 6px 14px;
      border-radius: 50px;
      font-size: 14px;
      font-weight: 600;
      margin-top: 10px;
      color: white;
      background-color: #999;
    }

    .status-badge.accepted {
      background-color: #2ecc71;
    }

    .status-badge.rejected {
      background-color: #e74c3c;
    }

    .buttons {
      margin-top: 15px;
    }

    .buttons button {
      padding: 8px 16px;
      border: none;
      border-radius: 6px;
      font-size: 14px;
      cursor: pointer;
      margin-right: 10px;
      transition: background-color 0.2s ease;
    }

    .buttons .accept-btn {
      background-color: #2ecc71;
      color: white;
    }

    .buttons .accept-btn:hover {
      background-color: #27ae60;
    }

    .buttons .reject-btn {
      background-color: #e74c3c;
      color: white;
    }

    .buttons .reject-btn:hover {
      background-color: #c0392b;
    }

    .cv-link {
      display: inline-block;
      margin-top: 12px;
      text-decoration: none;
      color: #007acc;
      font-weight: bold;
    }

    .cv-link:hover {
      text-decoration: underline;
    }

    .loading {
      text-align: center;
      font-size: 18px;
      margin-top: 40px;
    }
  </style>
</head>

<body>

  <h1>üìÑ Student Training Applications</h1>
  <div class="loading" id="loading">Loading applications...</div>
  <div class="applications" id="applications"></div>

  <script>
    const container = document.getElementById("applications");
    const loading = document.getElementById("loading");

    fetch("http://localhost:3000/company/1/applications")
      .then(res => {
        if (!res.ok) throw new Error("Failed to load");
        return res.json();
      })
      .then(data => {
        loading.style.display = "none";
        if (data.length === 0) {
          container.innerHTML = "<p>No applications found.</p>";
          return;
        }

        data.forEach(app => {
          const card = document.createElement("div");
          card.className = "application";

          let statusClass = "waiting";
          if (app.status === "accepted") {
            statusClass = "accepted";
          } else if (app.status === "rejected") {
            statusClass = "rejected";
          }

          card.innerHTML = `
            <h3>${app.full_name}</h3>
            <p><strong>email:</strong> ${app.email}</p>
            <p><strong>GPA:</strong> ${app.gpa}</p>
            <p><strong>address:</strong> ${app.address}</p>
            <p><strong>gender:</strong> ${app.gender}</p>
            <p><strong>position:</strong> ${app.training_type}</p>
            <span class="status-badge ${statusClass}">${app.status}</span>
            <div class="buttons">
              <button class="accept-btn">‚úÖ Accept</button>
              <button class="reject-btn">‚ùå Reject</button>
            </div>
            <a class="cv-link" href="./uploads/${app.cv_file}" target="_blank" download>üìÇ View and Download CV</a>
          `;

          const badge = card.querySelector(".status-badge");
          const acceptBtn = card.querySelector(".accept-btn");
          const rejectBtn = card.querySelector(".reject-btn");

          // Send data to the backend when "Accept" is clicked
          acceptBtn.addEventListener("click", () => {
            badge.textContent = "Accepted";
            badge.className = "status-badge accepted";

            // Send the application ID and new status to the backend
            fetch(`http://localhost:3000/applications/${app.id}/status`, {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ status: 'accepted' }),
            })
              .then(res => res.json())
              .then(data => {
                if (data.success) {
                  // Show alert when the status is updated successfully
                  alert(`Application ID ${app.id} has been accepted!`);
                }
              })
              .catch(err => {
                console.error('Error updating status:', err);
              });
          });

          // Send data to the backend when "Reject" is clicked
          rejectBtn.addEventListener("click", () => {
            badge.textContent = "Rejected";
            badge.className = "status-badge rejected";

            // Send the application ID and new status to the backend
            fetch(`http://localhost:3000/applications/${app.id}/status`, {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ status: 'rejected' }),
            })
              .then(res => res.json())
              .then(data => {
                if (data.success) {
                  // Show alert when the status is updated successfully
                  alert(`Application ID ${app.id} has been rejected.`);
                }
              })
              .catch(err => {
                console.error('Error updating status:', err);
              });
          });

          container.appendChild(card);
        });
      })
      .catch(err => {
        loading.textContent = "Error loading applications.";
        console.error(err);
      });
  </script>




</body>

</html>